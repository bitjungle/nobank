PRAGMA foreign_keys = ON;

-- DROP eksisterende tabeller i riktig rekkef√∏lge
DROP TABLE IF EXISTS FULLFORMSLISTE;
DROP TABLE IF EXISTS PARADIGME_BOYING;
DROP TABLE IF EXISTS BOYING;
DROP TABLE IF EXISTS BOYING_GRUPPER;
DROP TABLE IF EXISTS LEMMA_PARADIGME;
DROP TABLE IF EXISTS LEDDANALYSE;
DROP TABLE IF EXISTS PARADIGME;
DROP TABLE IF EXISTS LEMMA;

-- LEMMA
CREATE TABLE LEMMA (
    LEMMA_ID INTEGER PRIMARY KEY,
    GRUNNFORM TEXT NOT NULL,
    BM_ORDBOK TEXT CHECK (BM_ORDBOK IN ('BM_ORDBOK', 'GENERERT'))
);

-- BOYING_GRUPPER
CREATE TABLE BOYING_GRUPPER (
    ID INTEGER PRIMARY KEY,
    BOY_GRUPPE TEXT NOT NULL UNIQUE
);

-- PARADIGME
CREATE TABLE PARADIGME (
    PARADIGME_ID INTEGER PRIMARY KEY,
    BOY_GRUPPE TEXT NOT NULL,
    ORDKLASSE TEXT,
    ORDKLASSE_UTDYPING TEXT,
    FORKLARING TEXT,
    DOEME TEXT,
    ID INTEGER,
    FOREIGN KEY (BOY_GRUPPE) REFERENCES BOYING_GRUPPER(BOY_GRUPPE)
);

-- LEMMA_PARADIGME (uten FK til LEMMA eller PARADIGME)
CREATE TABLE LEMMA_PARADIGME (
    LEMMA_ID INTEGER,
    PARADIGME_ID INTEGER,
    NORMERING TEXT CHECK (NORMERING IN ('normert')),
    FRADATO DATE,
    TILDATO DATE,
    KOMMENTAR TEXT,
    PRIMARY KEY (LEMMA_ID, PARADIGME_ID)
);

-- BOYING
CREATE TABLE BOYING (
    BOY_NUMMER INTEGER,
    BOY_GRUPPE TEXT,
    BOY_TEKST TEXT NOT NULL,
    ORDBOK_TEKST TEXT,
    PRIMARY KEY (BOY_NUMMER, BOY_GRUPPE),
    FOREIGN KEY (BOY_GRUPPE) REFERENCES BOYING_GRUPPER(BOY_GRUPPE)
);

-- PARADIGME_BOYING
CREATE TABLE PARADIGME_BOYING (
    PARADIGME_ID INTEGER,
    BOY_NUMMER INTEGER,
    BOY_GRUPPE TEXT,
    BOY_UTTRYKK TEXT,
    PRIMARY KEY (PARADIGME_ID, BOY_NUMMER, BOY_GRUPPE),
    FOREIGN KEY (PARADIGME_ID) REFERENCES PARADIGME(PARADIGME_ID),
    FOREIGN KEY (BOY_NUMMER, BOY_GRUPPE) REFERENCES BOYING(BOY_NUMMER, BOY_GRUPPE)
);

-- FULLFORMSLISTE (uten FK til PARADIGME eller BOYING)
CREATE TABLE FULLFORMSLISTE (
    LEMMA_ID INTEGER,
    OPPSLAG TEXT NOT NULL,
    TAG TEXT,
    PARADIGME_ID INTEGER,
    BOY_NUMMER INTEGER,
    FRADATO DATE,
    TILDATO DATE,
    NORMERING TEXT CHECK (NORMERING IN ('normert')),
    PRIMARY KEY (LEMMA_ID, OPPSLAG, TAG, PARADIGME_ID, BOY_NUMMER)
);

-- LEDDANALYSE
CREATE TABLE LEDDANALYSE (
    LEDDANALYSE_ID INTEGER PRIMARY KEY,
    OPPSLAG TEXT,
    LEDDANALYSE TEXT,
    FORLEDD TEXT,
    FORLEDD_GRAM TEXT,
    FUGE TEXT,
    ETTERLEDD TEXT,
    ETTERLEDD_GRAM TEXT,
    LEDDMARKERT_BOB TEXT,
    NEG_FUGE TEXT,
    OPPSLAG_LEDD_MARKERT TEXT,
    BINDESTREKSFORM_FOR_LEMMA TEXT,
    LEMMA_ID INTEGER,
    FOREIGN KEY (LEMMA_ID) REFERENCES LEMMA(LEMMA_ID)
);

-- Indekser for ytelse
CREATE INDEX idx_fullforms_paradigme ON FULLFORMSLISTE(PARADIGME_ID);
CREATE INDEX idx_paradigme_boying ON PARADIGME_BOYING(PARADIGME_ID);
CREATE INDEX idx_boying_gruppe ON BOYING(BOY_GRUPPE);
CREATE INDEX idx_lemma_paradigme ON LEMMA_PARADIGME(PARADIGME_ID);
